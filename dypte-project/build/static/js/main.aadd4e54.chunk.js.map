{"version":3,"sources":["hooks/useLocalStorage.js","components/ide.js","components/App.js","index.js"],"names":["useLocalStorage","key","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","IDE","props","language","displayName","onChange","className","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","id","class","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAIe,SAASA,EAAgBC,EAAKC,GAC3C,IAAMC,EAHO,iBAGgBF,EAE7B,EAA0BG,oBAAS,WACjC,IAAMC,EAAYC,aAAaC,QAAQJ,GACvC,OAAiB,MAAbE,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBH,EACFA,IAEAA,KAPX,mBAAOQ,EAAP,KAAcC,EAAd,KAeA,OAJAC,qBAAU,WACRN,aAAaO,QAAQV,EAAaK,KAAKM,UAAUJ,MAChD,CAACP,EAAaO,IAEV,CAACA,EAAOC,G,kBCVF,SAASI,EAAIC,GAGxB,IACIC,EAIFD,EAJEC,SACAC,EAGFF,EAHEE,YACAR,EAEFM,EAFEN,MACAS,EACFH,EADEG,SASJ,OACI,sBAAKC,UAAU,mBAAf,UACG,qBAAKA,UAAU,eAAf,SACEF,IAGF,cAAC,aAAD,CACAG,eAXP,SAAsBC,EAAQC,EAAKb,GAC/BS,EAAST,IAWNA,MAAOA,EACPU,UAAU,sBACVI,QAAS,CACLC,cAAc,EACdC,MAAO,EACPC,KAAOV,EACPW,MAAO,WACPC,aAAa,QC+BbC,MAtEf,WACE,MAAwB9B,EAAgB,OAAQ,IAAhD,mBAAO+B,EAAP,KAAaC,EAAb,KACA,EAAsBhC,EAAgB,MAAO,IAA7C,mBAAOiC,EAAP,KAAYC,EAAZ,KACA,EAAoBlC,EAAgB,KAAM,IAA1C,mBAAOmC,EAAP,KAAWC,EAAX,KACA,EAA4BhC,mBAAS,IAArC,mBAAOiC,EAAP,KAAeC,EAAf,KAgBA,OAdA1B,qBAAU,WACR,IAAM2B,EAAUC,YAAW,WACzBF,EAAU,qCAAD,OAEGP,EAFH,qCAGIE,EAHJ,uCAIKE,EAJL,0CAOR,KAEH,OAAO,kBAAMM,aAAaF,MACzB,CAACR,EAAME,EAAKE,IAGb,qCAEE,sBAAKf,UAAU,gBAAf,sCAIE,yBAAQsB,GAAI,YAAYC,MAAM,YAAYxB,SAAS,mBAAnD,UAEE,wBAAQT,MAAM,OAAd,wBACA,wBAAQA,MAAM,MAAd,uBACA,wBAAQA,MAAM,KAAd,4BAKJ,sBAAKU,UAAU,gBAAf,UACE,cAACL,EAAD,CACEE,SAAS,MACTC,YAAY,OACZR,MAAOqB,EACPZ,SAAUa,IAEZ,cAACjB,EAAD,CACEE,SAAS,MACTC,YAAY,MACZR,MAAOuB,EACPd,SAAUe,IAEZ,cAACnB,EAAD,CACEE,SAAS,aACTC,YAAY,KACZR,MAAOyB,EACPhB,SAAUiB,OAGd,qBAAKhB,UAAU,OAAf,SACE,wBACEiB,OAAQA,EACRO,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,eC/DjBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.aadd4e54.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nconst PREFIX = 'codepen-clone-'\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  const prefixedKey = PREFIX + key\r\n\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey)\r\n    if (jsonValue != null) return JSON.parse(jsonValue)\r\n\r\n    if (typeof initialValue === 'function') {\r\n      return initialValue()\r\n    } else {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n  }, [prefixedKey, value])\r\n\r\n  return [value, setValue]\r\n}","import React from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\n\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport useLocalStorage from '../hooks/useLocalStorage'\r\n\r\nimport {Controlled as ControlledEditor} from 'react-codemirror2'\r\n\r\n\r\nexport default function IDE(props)\r\n{\r\n     \r\n    const{\r\n        language,\r\n        displayName,\r\n        value,\r\n        onChange,\r\n    }=props\r\n\r\n    \r\n\r\n    function handleChange(editor ,data,value){\r\n        onChange(value)\r\n    }\r\n\r\n    return(\r\n        <div className=\"editor-container\">\r\n           <div className=\"editor-title\">\r\n            {displayName}\r\n            \r\n           </div>\r\n           <ControlledEditor\r\n           onBeforeChange={handleChange}\r\n           value={value}\r\n           className=\"code-mirror-wrapper\"\r\n           options={{\r\n               lineWrapping: true,\r\n               lint : true,\r\n               mode : language,\r\n               theme: 'material',\r\n               lineNumbers: true\r\n           }}\r\n           />\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\nimport IDE from './ide'\nimport useLocalStorage from '../hooks/useLocalStorage'\n\nfunction App() {\n  const [html, setHtml] = useLocalStorage('html', '')\n  const [css, setCss] = useLocalStorage('css', '')\n  const [js, setJs] = useLocalStorage('js', '')\n  const [srcDoc, setSrcDoc] = useState('')\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n        <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>\n      `)\n    }, 250)\n\n    return () => clearTimeout(timeout)\n  }, [html, css, js])\n\n  return (\n    <>\n\n      <div className=\"control-panel\">\n\n        Select language\n        &nbsp; &nbsp;\n        <select id =\"languages\" class=\"languages\" onChange=\"changeLanguage()\">\n\n          <option value=\"html\">Index.html</option>\n          <option value=\"css\">Index.css</option>\n          <option value=\"js\">Index.js</option>\n\n        </select>\n    </div>\n\n      <div className=\"pane top-pane\">\n        <IDE\n          language=\"xml\"\n          displayName=\"HTML\"\n          value={html}\n          onChange={setHtml}\n        />\n        <IDE\n          language=\"css\"\n          displayName=\"CSS\"\n          value={css}\n          onChange={setCss}\n        />\n        <IDE\n          language=\"javascript\"\n          displayName=\"JS\"\n          value={js}\n          onChange={setJs}\n        />\n      </div>\n      <div className=\"pane\">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </div>\n    </>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}